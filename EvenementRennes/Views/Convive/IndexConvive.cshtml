@model IEnumerable<EvenementRennes.Models.Evenement>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<style>
    .card {
        margin-top: 2%;
        margin-left: 2%;
        height: fit-content;
        width: 342px;
        /* Add shadows to create the "card" effect */
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        transition: 0.3s;
    }

    .card:hover { box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2); }

    .container { padding: 2px 16px; }

    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0, 0, 0); /* Fallback color */
        background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
    }

    /* Modal Content/Box */

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 28%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button */

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

    .modal-header {
        padding: 2px 16px;
        background-color: #5cb85c;
        color: white;
    }
</style>
@{
    int i = 0;
    string descriptifRef = "descriptif";
}
<div style="display: flex; margin-top: 10%; height: fit-content; flex-wrap: wrap">
    @foreach (var item in Model)
    {
        var descriptif = descriptifRef + i.ToString();

        <div class="card">
            <div class="container" style="width: auto">
                <div id="myCarousel" class="carousel slide" data-ride="carousel">
                    <!-- Indicators -->
                    <ol class="carousel-indicators">
                        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                        <li data-target="#myCarousel" data-slide-to="1"></li>
                        <li data-target="#myCarousel" data-slide-to="2"></li>
                    </ol>

                    <!-- Wrapper for slides -->
                    <div class="carousel-inner">
                        <div class="item active">
                            <img src="~/Content/img_avatar.png" alt="Los Angeles">
                        </div>

                        <div class="item">
                            <img src="~/Content/img_avatar1.png" alt="Chicago">
                        </div>

                        <div class="item">
                            <img src="~/Content/img_avatar5.png" alt="New york">
                        </div>
                    </div>

                    <!-- Left and right controls -->
                    <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="right carousel-control" href="#myCarousel" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
            <div class="container" style="width: auto">
                <div>@Html.DisplayFor(modelItem => item.lieu)</div>
                <div hidden>@Html.DisplayFor(modelItem => item.date)</div>
                <div hidden>@Html.DisplayFor(modelItem => item.duree)</div>
                <div hidden>@Html.DisplayFor(modelItem => item.theme)</div>
                <div id="@descriptif" style="display: none">@Html.DisplayFor(modelItem => item.descriptif)</div>
                <input name="id" hidden value="@item.ID"/>
                <input hidden type="submit" value="Submit" class="submit"/>
                <div style="width: fit-content; margin-left: auto">
                    <button onclick="myFunction('@descriptif')" class="btn">Details</button>
                    <button id="trajetBtn" class="btn" onclick="setLieu('@item.lieu')">Trajet</button>
                </div>
            </div>
        </div>
        i = i + 1;
    }

    <div id="myModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2 style="text-align: center;">Adresse de départ</h2>
            </div>
            <div class="modal-body">
                <form method="post" action="@Url.Action("TrajetConvive", "Convive")">
                    <div class="form-group">
                        <input type="text" name="adresse" class="form-control" id="adresse" placeholder="Entrez votre adresse de départ">
                        <input hidden name="duree" id="duree" value="@ViewData["duree"]"/>
                        <input hidden type="text" name="lieu" id="lieu"/>
                    </div>
                    <button type="submit" class="btn btn-primary" style="margin-left: auto;margin-right: auto;display: flex;">Effectuer</button>
                </form>
            </div>
        </div>
    </div>       
</div>

<script src="../../Scripts/indexConviveScript.js"/>